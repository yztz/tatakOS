{
    "files.associations": {
        "*.xdc": "tcl",
        "Makefile.*": "makefile",
        "array": "c",
        "*.tcc": "c",
        "functional": "c",
        "tuple": "c",
        "cstdio": "c",
        "cstddef": "cpp",
        "type_traits": "cpp",
        "cmath": "cpp",
        "limits": "cpp",
        "cstdint": "c",
        "random": "c",
        "string_view": "c",
        "initializer_list": "c",
        "utility": "c",
        "algorithm": "c",
        "memory": "c",
        "exception": "c",
        "memory_resource": "c",
        "fstream": "c",
        "iosfwd": "c",
        "new": "c",
        "ostream": "c",
        "sstream": "c",
        "streambuf": "c",
        "istream": "cpp",
        "typeinfo": "c",
        "string": "c",
        "unordered_map": "c",
        "vector": "c",
        "optional": "c",
        "stdexcept": "c",
        "numeric": "c",
        "deque": "c",
        "*.inc": "c",
        "charconv": "c",
        "hash_map": "c",
        "hash_set": "c",
        "bitset": "c",
        "rope": "c",
        "slist": "c",
        "regex": "c",
        "dynamic_bitset": "c",
        "atomic": "c",
        "bit": "c",
        "system_error": "c",
        "*.h": "c"
    },
    "clangd.arguments": [
        // 让 Clangd 生成更详细的日志
        "--log=verbose",
        // 输出的 JSON 文件更美观
        "--pretty",
        // 全局补全(输入时弹出的建议将会提供 CMakeLists.txt 里配置的所有文件中可能的符号，会自动补充头文件)
        "--all-scopes-completion",
        // 建议风格：打包(重载函数只会给出一个建议）
        // 相反可以设置为detailed
        "--completion-style=bundled",
        // 跨文件重命名变量
        "--cross-file-rename",
        // 允许补充头文件
        "--header-insertion=iwyu",
        // 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
        "--header-insertion-decorators",
        // 在后台自动分析文件(基于 complie_commands，我们用CMake生成)
        "--background-index",
        // 启用 Clang-Tidy 以提供「静态检查」
        "--clang-tidy",
        // Clang-Tidy 静态检查的参数，指出按照哪些规则进行静态检查，详情见「与按照官方文档配置好的 VSCode 相比拥有的优势」
        // 参数后部分的*表示通配符
        // 在参数前加入-，如-modernize-use-trailing-return-type，将会禁用某一规则
        "--clang-tidy-checks=cppcoreguidelines-*,performance-*,bugprone-*,portability-*,modernize-*,google-*",
        // 默认格式化风格: 谷歌开源项目代码指南
        // "--fallback-style=file",
        // 同时开启的任务数量
        "-j=2",
        // pch优化的位置(memory 或 disk，选择memory会增加内存开销，但会提升性能) 推荐在板子上使用disk
        "--pch-storage=disk",
        // compelie_commands.json 文件的目录位置(相对于工作区，由于 CMake 生成的该文件默认在 build 文件夹中，故设置为 build)
        "--compile-commands-dir=."
      ],
    "C_Cpp.errorSquiggles": "enabled",
    "todohighlight.keywords": [
        {
            "text": "OK:",
            "backgroundColor": "green",
            "color": "white"
        },
        {
            "text": "TODO:",
            "backgroundColor": "#005ba4",
            "color": "white"
        }
    ],
    "C_Cpp.dimInactiveRegions": false,
    "terminal.integrated.commandsToSkipShell": [
        "-workbench.action.quickOpen",
        "-workbench.action.terminal.paste"
    ]
}   
